#https://hub.docker.com/repository/docker/danieldeaconumuzi/ci-cd-webcounter-frontend/general

name: Web-counter Release CI

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the source code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Log into DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set Docker image tags
        id: vars
        run: echo "RELEASE_TAG=${{ github.sha }}" >> $GITHUB_ENV

      - name: Build and push backend Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./backend.dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ci-cd-webcounter-backend:${{ env.RELEASE_TAG }}

      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./frontend.dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ci-cd-webcounter-frontend:${{ env.RELEASE_TAG }}


# --------- Deploy the Docker images on an EC2 instance --------- #

  deploy:
      needs: build-and-push
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          uses: actions/checkout@v3

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: af-south-1
      
        - name: Initialise Terraform
          uses: hashicorp/setup-terraform@v2 
          with:
            terraform_version: 1.4.0

        - name: Terraform Init
          run: terraform init
      
        - name: Terraform Plan
          run: terraform plan -input=false -no-color

        - name: Terraform Apply
          id: apply
          run: terraform apply -auto-approve

        - name: Check Terraform DNS Output
          run: |
            EC2_IP=$(terraform output -raw ec2_public_dns | grep -o 'ec2-.*\.compute\.amazonaws\.com' | head -n 1)
            EC2_IP=$(echo "${EC2_IP}" | sed 's/[[:space:]\$]*$//')
            echo "Extracted EC2 DNS: ${EC2_IP}"
            echo "EC2_IP=${EC2_IP}" >> $GITHUB_ENV
  
        - name: Check Github env.
          run: |
            pwd
            echo "EC2_IP: ${{ env.EC2_IP }}"
            echo "${{ secrets.EC2_PRIVATE_KEY }}" > /home/runner/work/web-counter/web-counter/myDefaultKeyPair.pem
            ls
            chmod 600 myDefaultKeyPair.pem
            echo "Giving the instance a moment..."
            sleep 60

        - name: Copy install script to EC2
          run: |
            scp -vvv -o StrictHostKeyChecking=no -i ./myDefaultKeyPair.pem ./setup.sh ubuntu@${{ env.EC2_IP }}:/home/ubuntu/
            
        - name: Copy docker-compose file to EC2
          run: |
            scp -vvv -o StrictHostKeyChecking=no -i ./myDefaultKeyPair.pem ./docker-compose.yml ubuntu@${{ env.EC2_IP }}:/home/ubuntu/

        - name: Export environment variables and run install script
          run: |
            ssh -vvv -o StrictHostKeyChecking=no -i ./myDefaultKeyPair.pem ubuntu@${{ env.EC2_IP }} \
            "export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }} && \
            export RELEASE_TAG=${{ env.RELEASE_TAG }} && \
            sudo bash /home/ubuntu/setup.sh"